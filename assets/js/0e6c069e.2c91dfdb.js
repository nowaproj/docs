"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[1455],{4587:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"data/creating_models","title":"Modeling API responses","description":"In the previous page, we created our first API request, getAllPosts, intended to retrieve all posts from a WordPress API. After running the test and ensuring everything works correctly, it\'s time to generate a model from the response. This model will allow us to use the API data within our app seamlessly.","source":"@site/docs/data/creating_models.md","sourceDirName":"data","slug":"/data/creating_models","permalink":"/data/creating_models","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Modeling API responses"},"sidebar":"tutorialSidebar","previous":{"title":"Create an API request","permalink":"/data/creating_request"},"next":{"title":"Displaying a response in UI","permalink":"/data/displaying_ui"}}');var r=s(4848),l=s(8453);const i={sidebar_position:2,title:"Modeling API responses"},d="Generating Models from a Request",o={},c=[{value:"Generating a Model from the API Response",id:"generating-a-model-from-the-api-response",level:2},{value:"Steps:",id:"steps",level:3},{value:"Understanding the Generated Models",id:"understanding-the-generated-models",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function h(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"generating-models-from-a-request",children:"Generating Models from a Request"})}),"\n",(0,r.jsxs)(n.p,{children:["In the previous page, we created our first API request, ",(0,r.jsx)(n.code,{children:"getAllPosts"}),", intended to retrieve all posts from a WordPress API. After running the test and ensuring everything works correctly, it's time to generate a model from the response. This model will allow us to use the API data within our app seamlessly."]}),"\n",(0,r.jsx)(n.h2,{id:"generating-a-model-from-the-api-response",children:"Generating a Model from the API Response"}),"\n",(0,r.jsx)(n.p,{children:"To utilize the data returned by the API, we need to convert the raw JSON response into a structured model. Here's how you can generate a model in Nowa:"}),"\n",(0,r.jsx)(n.h3,{id:"steps",children:"Steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Run the API Test:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure you have run a test for your API request. This populates the response data needed for model generation."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"(You can also generate the model using a Mock JSON, but running a test will automatically fill up the data panel to use for model generation)"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Access Data Models:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["After running the test, click on ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Data Models"})})," in the API request interface."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Generate Model from Schema:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Click on ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Generate Model from Schema"})}),"."]}),"\n",(0,r.jsx)(n.li,{children:"You will see the JSON data that Nowa will use to generate the model. If you have run a test, this area will be pre-filled with the response data."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," If you cannot run a test (e.g., the API isn't ready), you can paste a mock JSON response here."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tip:"})," Click on the three dots in the top-right corner to beautify, copy, wrap, or compress the JSON."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Select Data Fields:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Next"})})," to proceed."]}),"\n",(0,r.jsx)(n.li,{children:"Nowa will display the data structure it plans to model."}),"\n",(0,r.jsx)(n.li,{children:"By default, all data fields are selected. However, it's recommended to select only the fields you need to keep the model simple and efficient."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For the WordPress API, we might select only ",(0,r.jsx)(n.code,{children:"title"})," and ",(0,r.jsx)(n.code,{children:"content"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Within ",(0,r.jsx)(n.code,{children:"title"})," and ",(0,r.jsx)(n.code,{children:"content"}),", select the ",(0,r.jsx)(n.code,{children:"rendered"})," field, which contains the actual text."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Review the Model:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Click ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Next"})})," to see the models that will be created."]}),"\n",(0,r.jsxs)(n.li,{children:["You will see:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Top-Level Model:"})," (e.g., ",(0,r.jsx)(n.code,{children:"GetAllPostsModel"}),") representing each blog post."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nested Models:"})," (e.g., ",(0,r.jsx)(n.code,{children:"Title"}),", ",(0,r.jsx)(n.code,{children:"Content"}),") for nested data structures."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["You can rename the top-level model and adjust the storage path if needed. By default:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The model name is ",(0,r.jsx)(n.code,{children:"RequestName"})," + ",(0,r.jsx)(n.code,{children:"Model"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["The path is the ",(0,r.jsx)(n.code,{children:"/models"})," folder."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Generate the Model:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If everything looks good, click ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Generate"})})," to create the models."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Here's the full example of generating the model for ",(0,r.jsx)(n.code,{children:"getAllPosts"})," request:\n",(0,r.jsx)(n.img,{src:s(5022).A+"",width:"1200",height:"682"})]}),"\n",(0,r.jsx)(n.h2,{id:"understanding-the-generated-models",children:"Understanding the Generated Models"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:s(6615).A+"",width:"3160",height:"1854"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["List of ",(0,r.jsx)(n.code,{children:"GetAllPostsModel"}),":"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Represents a list of blog posts."}),"\n",(0,r.jsxs)(n.li,{children:["Each item includes the ",(0,r.jsx)(n.code,{children:"Title"})," and ",(0,r.jsx)(n.code,{children:"Content"})," models."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"Title"})," and ",(0,r.jsx)(n.code,{children:"Content"})," Models:"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Contain the ",(0,r.jsx)(n.code,{children:"rendered"})," property, which holds the text for each post's title and content."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,r.jsx)(n.p,{children:"Now that the model is generated, you have a structured representation of your API data. From here, you can:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connect the Request to the UI:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use the data in your app's screens by wrapping UI elements with a data builder."}),"\n",(0,r.jsx)(n.li,{children:"This allows you to display dynamic content retrieved from the API."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Modify Mock Data (Optional):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Access the ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Mock Data"})})," section to view or edit the mock data."]}),"\n",(0,r.jsx)(n.li,{children:"Mock data is used during design time to prevent unnecessary API calls."}),"\n",(0,r.jsx)(n.li,{children:"It's helpful for testing how your UI will look with actual data."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"What's coming Next:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"[Using the Request in the UI]"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Learn how to integrate the API request and models into your app's interface."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Working with Mock Data"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Understand how to utilize mock data effectively during development."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Adding Parameters and Advanced Requests"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Explore how to add parameters to your requests and handle ",(0,r.jsx)(n.code,{children:"POST"})," requests using the Circuit (logic editor)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Proceed to the next section to learn how to use the request in the UI and continue building your app's functionality."})})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},5022:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/model-generation-f1b32aea3a8032712c5c4a6318112b3a.gif"},6615:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/final-model-1de99b39766eb8d3ef3de4ba2e0a04ab.png"},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>d});var t=s(6540);const r={},l=t.createContext(r);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);