"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[1963],{7765:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"logic/common_functionalities/print","title":"Print","description":"Using print node to print messages on the logs","source":"@site/docs/logic/common_functionalities/print.md","sourceDirName":"logic/common_functionalities","slug":"/logic/common_functionalities/print","permalink":"/logic/common_functionalities/print","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Print","description":"Using print node to print messages on the logs"},"sidebar":"tutorialSidebar","previous":{"title":"Media Picker","permalink":"/logic/common_functionalities/media_picker"},"next":{"title":"Open Url","permalink":"/logic/common_functionalities/open_url"}}');var t=i(4848),r=i(8453);const o={sidebar_position:2,title:"Print",description:"Using print node to print messages on the logs"},l=void 0,c={},d=[{value:"\ud83d\udca1 Common use cases for Print:",id:"-common-use-cases-for-print",level:3},{value:"\u2795 How to add a Print node",id:"-how-to-add-a-print-node",level:3},{value:"\ud83d\udd0d Viewing Printed Messages",id:"-viewing-printed-messages",level:3},{value:"\ud83e\uddea Using a variable with the printed message",id:"-using-a-variable-with-the-printed-message",level:3},{value:"\ud83e\uddf5 Combining Text + Variables in Print",id:"-combining-text--variables-in-print",level:3},{value:"1. Inline using <code>$</code>",id:"1-inline-using-",level:4},{value:"2. Using a Custom Expression",id:"2-using-a-custom-expression",level:4}];function a(e){const n={admonition:"admonition",br:"br",code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Print"})," node allows you to print messages into the app logs. It's a useful tool for debugging and tracking variable values or function outputs during runtime."]}),"\n",(0,t.jsx)(n.h3,{id:"-common-use-cases-for-print",children:"\ud83d\udca1 Common use cases for Print:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Debugging: see the value of a variable or the result of an expression."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Validating user input: print what a user typed in a form field."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Monitoring app behavior: check if a certain function or condition was triggered."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Logging custom events: record actions like button clicks, page visits, etc."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-how-to-add-a-print-node",children:"\u2795 How to add a Print node"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Inside the ",(0,t.jsx)(n.strong,{children:"Circuit"}),", scroll down to the ",(0,t.jsx)(n.strong,{children:"Nowa"})," category."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Drag and drop the ",(0,t.jsx)(n.strong,{children:"Print"})," node into your circuit."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Next to the ",(0,t.jsx)(n.code,{children:"Msg"})," field:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You can directly type the message to print."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Or click on ",(0,t.jsx)(n.code,{children:"Msg"})," to connect it to a variable, parameter, or an expression."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-viewing-printed-messages",children:"\ud83d\udd0d Viewing Printed Messages"}),"\n",(0,t.jsx)(n.p,{children:"When you run your app:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click the ",(0,t.jsx)(n.strong,{children:"log icon"})," in the bottom-left corner of the Nowa editor."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["A popup will open showing logs (default tab is Errors\u2014click on ",(0,t.jsx)(n.strong,{children:"Logs"})," to view your print outputs)."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udcf9 In the example video, we simply added a Print node with a plain message and confirmed it appears in the logs as expected."}),"\n",(0,t.jsxs)("video",{controls:!0,width:"850",children:[(0,t.jsx)("source",{src:"/img/circuit/common_functionalities/print/print.mp4",type:"video/mp4"}),(0,t.jsx)(n.p,{children:"Your browser does not support the video tag."})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.admonition,{title:"\ud83d\udcbb Local Projects and External Logs",type:"info",children:[(0,t.jsx)(n.p,{children:"If you're running your app on a simulator (e.g., iOS simulator):"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["You'll see printed messages ",(0,t.jsx)(n.strong,{children:"inside Nowa"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Also"})," in external tools like ",(0,t.jsx)(n.strong,{children:"VS Code"}),", if you run the simulator from there.",(0,t.jsx)(n.br,{}),"\n","This is because the Print node directly uses Flutter's ",(0,t.jsx)(n.code,{children:"print()"})," inside the generated code."]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-using-a-variable-with-the-printed-message",children:"\ud83e\uddea Using a variable with the printed message"}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udcf9 In the following video:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["We have a ",(0,t.jsx)(n.code,{children:"TextField"})," where the user types their name."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["We're using a ",(0,t.jsx)(n.code,{children:"TextController"})," to access that input."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Then we add a ",(0,t.jsx)(n.strong,{children:"Print"})," node, and connect its ",(0,t.jsx)(n.code,{children:"Msg"})," to the ",(0,t.jsx)(n.code,{children:"text"})," property of the TextField, so we print the most recent name typed by the user."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("video",{controls:!0,width:"850",children:[(0,t.jsx)("source",{src:"/img/circuit/common_functionalities/print/print_with_var.mp4",type:"video/mp4"}),(0,t.jsx)(n.p,{children:"Your browser does not support the video tag."})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-combining-text--variables-in-print",children:"\ud83e\uddf5 Combining Text + Variables in Print"}),"\n",(0,t.jsx)(n.p,{children:"You can print a mix of static text and dynamic data using two methods:"}),"\n",(0,t.jsxs)(n.h4,{id:"1-inline-using-",children:["1. Inline using ",(0,t.jsx)(n.code,{children:"$"})]}),"\n",(0,t.jsxs)(n.p,{children:["Inside the ",(0,t.jsx)(n.strong,{children:"Msg"})," field:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Start typing your message."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["When you want to insert a variable, parameter, or expression, just type ",(0,t.jsx)(n.code,{children:"$"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"This will open a linking menu \u2014 select the element you want to insert."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The final message will look like ",(0,t.jsx)(n.code,{children:"message ${variable}"})]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"You can inject variables, parameters, and even function results into the message. For example we can inject the result coming from calling a funciton getName like this:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'"My name is ${getName()}"\n'})})]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," You can use the dollar sign ",(0,t.jsx)(n.strong,{children:"without curly braces"})," if you're inserting a simple variable or parameter without any property access:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'"My name is $name"\n'})}),(0,t.jsxs)(n.p,{children:["However, when referencing something that includes a ",(0,t.jsx)(n.strong,{children:"dot"})," (like accessing a property), you must wrap it with ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"${}"})}),", for example:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'"My name is ${textController.text}"\n'})})]}),"\n",(0,t.jsxs)(n.p,{children:["This is the same as using ",(0,t.jsx)(n.code,{children:"${}"})," in Flutter (called ",(0,t.jsx)(n.strong,{children:"string interpolation"}),"), where you embed code inside a string:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'print("My name is ${textController.text}");\n'})}),"\n",(0,t.jsx)(n.h4,{id:"2-using-a-custom-expression",children:"2. Using a Custom Expression"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click on ",(0,t.jsx)(n.code,{children:"Msg"})," \u2192 choose ",(0,t.jsx)(n.strong,{children:"Custom expression"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"You can build the message like:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'"My name is " + textController.text\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Or again, use string interpolation:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'"My name is ${textController.text}"\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.mdxAdmonitionTitle,{children:["The String in a custom expression should be with ",(0,t.jsx)(n.strong,{children:"double quotes"})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," When using ",(0,t.jsx)(n.strong,{children:"Custom expression"}),", the entire expression must be a ",(0,t.jsx)(n.strong,{children:"string"}),", so you need to wrap it with ",(0,t.jsx)(n.strong,{children:"double quotes"}),", like:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:'"My name is ${textController.text}"\n'})}),(0,t.jsxs)(n.p,{children:["However, when typing directly inside the ",(0,t.jsx)(n.strong,{children:"Msg"})," field, Nowa ",(0,t.jsx)(n.strong,{children:"automatically wraps"})," your input with double quotes \u2014 so you ",(0,t.jsx)(n.strong,{children:"don\u2019t need to add them yourself"}),". Just type your message normally."]})]}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udcf9 In the continuation video:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"We first print the name from the TextField."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Then switch to using a custom expression to enhance the message format."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)("video",{controls:!0,width:"850",children:[(0,t.jsx)("source",{src:"/img/circuit/common_functionalities/print/print_custom_expression.mp4",type:"video/mp4"}),(0,t.jsx)(n.p,{children:"Your browser does not support the video tag."})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);