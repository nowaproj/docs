"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[4502],{981:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"ui/themes/colors-themes","title":"Colors","description":"Modify and use Colors using themes","source":"@site/docs/ui/themes/colors-themes.md","sourceDirName":"ui/themes","slug":"/ui/themes/colors-themes","permalink":"/ui/themes/colors-themes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Colors","description":"Modify and use Colors using themes"},"sidebar":"tutorialSidebar","previous":{"title":"Create themes","permalink":"/ui/themes/create-themes"},"next":{"title":"Typography","permalink":"/ui/themes/typograhies"}}');var r=s(4848),t=s(8453);const i={sidebar_position:2,title:"Colors",description:"Modify and use Colors using themes"},l=void 0,a={},c=[{value:"<strong>Color Properties in Themes</strong>",id:"color-properties-in-themes",level:2},{value:"<strong>Changing Theme Colors</strong>",id:"changing-theme-colors",level:2},{value:"<strong>Using Theme Colors for Widgets</strong>",id:"using-theme-colors-for-widgets",level:2},{value:"<strong>Adding Opacity to Theme Colors</strong>",id:"adding-opacity-to-theme-colors",level:2},{value:"<strong>Default Theme Colors for New Widgets</strong>",id:"default-theme-colors-for-new-widgets",level:2}];function d(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.admonition,{title:"Some of info regarding themes is outdated",type:"warning",children:(0,r.jsxs)(o.p,{children:["Some info in the Themes section is outdated. The section will be updated in few days :)\nIf you have a question feel free to ask at ",(0,r.jsx)(o.a,{href:"mailto:team@nowa.dev",children:"team@nowa.dev"})," or using our Community on Discord"]})}),"\n",(0,r.jsx)(o.p,{children:"Colors are a vital part of your app's design. With Nowa\u2019s theme system, you can easily create and manage a cohesive color palette. Themes ensure your app looks consistent, professional, and adaptable to changes."}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h2,{id:"color-properties-in-themes",children:(0,r.jsx)(o.strong,{children:"Color Properties in Themes"})}),"\n",(0,r.jsxs)(o.p,{children:["To customize theme colors, open the ",(0,r.jsx)(o.code,{children:"themes.dart"})," file located in the ",(0,r.jsx)(o.code,{children:"globals"})," folder. From there, click on ",(0,r.jsx)(o.code,{children:"Colors"}),". You can modify any color property to align with your brand or style."]}),"\n",(0,r.jsx)(o.p,{children:"Each theme comes with a comprehensive set of color properties. These properties determine how widgets look across your app. Below is an explanation of each property:"}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Primary"}),": The main color for key elements like buttons and app bars."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"On Primary"}),": The color of text and icons displayed on primary-colored backgrounds."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Secondary"}),": A complementary color for accents or secondary elements."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"On Secondary"}),": The color of text and icons displayed on secondary-colored backgrounds."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Tertiary"}),": An additional accent color for unique or decorative elements."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"On Tertiary"}),": The color of text and icons displayed on tertiary-colored backgrounds."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Error"}),": A strong color used to highlight errors or warnings."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"On Error"}),": The color of text and icons displayed on error-colored backgrounds."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Surface"}),": The background color used for cards, sheets, and menus."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"On Surface"}),": The color of text and icons displayed on surface-colored backgrounds."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Shadow"}),": The color used for shadows on elevated components like buttons or cards."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Background"}),": The overall background color of your app."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"On Background"}),": The color of text and icons displayed on the app\u2019s background."]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"This well-structured system ensures all design elements work together seamlessly, creating a cohesive user experience."}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h2,{id:"changing-theme-colors",children:(0,r.jsx)(o.strong,{children:"Changing Theme Colors"})}),"\n",(0,r.jsx)(o.p,{children:"You can easily change any color in the theme to suit your needs."}),"\n",(0,r.jsxs)(o.p,{children:["To start, use the ",(0,r.jsx)(o.strong,{children:"Colors from"})," menu to load the default Light or Dark mode colors."]}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.img,{src:s(3321).A+"",width:"3248",height:"1928"})}),"\n",(0,r.jsx)(o.p,{children:"Unchanged colors will automatically toggle between Light and Dark modes. Customized colors, however, remain fixed, giving you precise control over your app's appearance."}),"\n",(0,r.jsx)(o.p,{children:"This approach is particularly useful when creating a new theme that isn\u2019t based on the default Light or Dark modes."}),"\n",(0,r.jsx)(o.p,{children:"Changing one of the colors of the default theme updates your app UI instantly:"}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.img,{src:s(5950).A+"",width:"1200",height:"676"})}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h2,{id:"using-theme-colors-for-widgets",children:(0,r.jsx)(o.strong,{children:"Using Theme Colors for Widgets"})}),"\n",(0,r.jsx)(o.p,{children:"To apply a theme color to a widget:"}),"\n",(0,r.jsxs)(o.ol,{children:["\n",(0,r.jsx)(o.li,{children:"Open the color picker in the widget\u2019s properties panel."}),"\n",(0,r.jsxs)(o.li,{children:["Choose a theme color like ",(0,r.jsx)(o.code,{children:"Primary"}),", ",(0,r.jsx)(o.code,{children:"Secondary"}),", or ",(0,r.jsx)(o.code,{children:"Background"}),"."]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"Once a widget is linked to a theme color, it will automatically update whenever you modify the theme or that specific color. This ensures your app stays consistent and saves you from making manual updates."}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.img,{src:s(3150).A+"",width:"1200",height:"676"})}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h2,{id:"adding-opacity-to-theme-colors",children:(0,r.jsx)(o.strong,{children:"Adding Opacity to Theme Colors"})}),"\n",(0,r.jsx)(o.p,{children:"Need a transparent version of a theme color? Nowa makes it easy without altering the original color in the theme. Follow these steps:"}),"\n",(0,r.jsxs)(o.ol,{children:["\n",(0,r.jsx)(o.li,{children:"Link a widget to a theme color."}),"\n",(0,r.jsx)(o.li,{children:"Click on the color name in the properties panel."}),"\n",(0,r.jsxs)(o.li,{children:["Select ",(0,r.jsx)(o.strong,{children:"With Opacity"})," and adjust the transparency level to your liking."]}),"\n"]}),"\n",(0,r.jsx)(o.p,{children:"This feature is perfect for subtle effects while keeping the base color intact."}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.img,{src:s(7106).A+"",width:"1200",height:"676"})}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h2,{id:"default-theme-colors-for-new-widgets",children:(0,r.jsx)(o.strong,{children:"Default Theme Colors for New Widgets"})}),"\n",(0,r.jsx)(o.p,{children:"When you drop a new widget into your project, it will automatically use the colors from the default theme."}),"\n",(0,r.jsx)(o.p,{children:"For example, when you add a button, it will inherit the current default theme's colors without requiring additional setup. This saves time and ensures new widgets blend seamlessly with your design."}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.img,{src:s(7337).A+"",width:"1200",height:"676"})}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.p,{children:"Nowa\u2019s theme colors empower you to create stunning, adaptable designs effortlessly. They provide flexibility, consistency, and efficiency, helping you focus on what matters most\u2014building a beautiful app. Next, we\u2019ll dive into Typography, which defines the structure and style of your app\u2019s text."})]})}function h(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},3150:(e,o,s)=>{s.d(o,{A:()=>n});const n=s.p+"assets/images/container-theme-760a0d285a1536a731bee45b7ef3b066.gif"},3321:(e,o,s)=>{s.d(o,{A:()=>n});const n=s.p+"assets/images/colors-from-f8d591ed49e1e345eb559483747278af.png"},5950:(e,o,s)=>{s.d(o,{A:()=>n});const n=s.p+"assets/images/change-colors-1a4e8b9d844a3c7ffbd26f2e6bef39fc.gif"},7106:(e,o,s)=>{s.d(o,{A:()=>n});const n=s.p+"assets/images/add-opacity-04c1d0b2e995b764d00496f6dd7d6a9b.gif"},7337:(e,o,s)=>{s.d(o,{A:()=>n});const n=s.p+"assets/images/button-theme-c0b06309c8e973eaa8255cd68e53db15.gif"},8453:(e,o,s)=>{s.d(o,{R:()=>i,x:()=>l});var n=s(6540);const r={},t=n.createContext(r);function i(e){const o=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(t.Provider,{value:o},e.children)}}}]);