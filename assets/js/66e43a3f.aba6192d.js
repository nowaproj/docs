"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[4957],{837:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=n(5893),s=n(1151);const r={sidebar_position:3,title:"Overriding state functions"},o=void 0,c={id:"circuit/override_functions",title:"Overriding state functions",description:"Let's see how you can override and add your logic to exisiting flutter state functions, such as initState and dispose.",source:"@site/docs/circuit/override_functions.md",sourceDirName:"circuit",slug:"/circuit/override_functions",permalink:"/circuit/override_functions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Overriding state functions"},sidebar:"tutorialSidebar",previous:{title:"Navigate between screens",permalink:"/circuit/navigate"},next:{title:"Collaboration\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1",permalink:"/collaboration"}},d={},l=[{value:"Overriding Functions",id:"overriding-functions",level:2},{value:"Importance of &quot;Call Super&quot; Node",id:"importance-of-call-super-node",level:2},{value:"Custom Logic Integration",id:"custom-logic-integration",level:2},{value:"Use Cases for Overrides",id:"use-cases-for-overrides",level:2},{value:"<code>initState</code> Overrides",id:"initstate-overrides",level:3},{value:"<code>dispose</code> Overrides",id:"dispose-overrides",level:3},{value:"Extending Overrides",id:"extending-overrides",level:2}];function a(e){const i={code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.p,{children:["Let's see how you can override and add your logic to exisiting flutter state functions, such as ",(0,t.jsx)(i.code,{children:"initState"})," and ",(0,t.jsx)(i.code,{children:"dispose"}),"."]}),"\n",(0,t.jsx)(i.h2,{id:"overriding-functions",children:"Overriding Functions"}),"\n",(0,t.jsxs)(i.p,{children:["To enhance your app's functionality with custom initialization and cleanup logic, Circuit allows for the overriding of ",(0,t.jsx)(i.code,{children:"initState"})," and ",(0,t.jsx)(i.code,{children:"dispose"})," functions. This can be done by:"]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"Navigating to the screen or component's Circuit editor."}),"\n",(0,t.jsxs)(i.li,{children:['Clicking the plus icon next to "Functions" and choosing to either create a new function or override an existing one, like ',(0,t.jsx)(i.code,{children:"initState"})," or ",(0,t.jsx)(i.code,{children:"dispose"}),"."]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{src:n(3977).Z+"",width:"1200",height:"590"})}),"\n",(0,t.jsx)(i.h2,{id:"importance-of-call-super-node",children:'Importance of "Call Super" Node'}),"\n",(0,t.jsxs)(i.p,{children:['Upon overriding, a "Call super" node appears, representing the crucial call to the parent class\'s method (',(0,t.jsx)(i.code,{children:"super.initState();"})," or ",(0,t.jsx)(i.code,{children:"super.dispose();"}),"). Including this ensures the inherited functionality is executed, maintaining the integrity of the widget's lifecycle."]}),"\n",(0,t.jsx)(i.h2,{id:"custom-logic-integration",children:"Custom Logic Integration"}),"\n",(0,t.jsx)(i.p,{children:"After the \"Call super\" node, you're free to connect your custom logic. This enables executing specific tasks immediately after the parent class's logic, providing a seamless integration of custom functionality into the widget's lifecycle."}),"\n",(0,t.jsx)(i.h2,{id:"use-cases-for-overrides",children:"Use Cases for Overrides"}),"\n",(0,t.jsxs)(i.h3,{id:"initstate-overrides",children:[(0,t.jsx)(i.code,{children:"initState"})," Overrides"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Checking if the User is Already Signed In"}),": Right when the screen loads, you can check if a user is already signed in to decide what to show them next."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Fetching Data"}),": Ideal for initializing screens with external data."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Setting Up Listeners"}),": For starting event listeners or streams."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Initializing Controllers"}),": Perfect for setting up any controllers for your widget."]}),"\n"]}),"\n",(0,t.jsxs)(i.h3,{id:"dispose-overrides",children:[(0,t.jsx)(i.code,{children:"dispose"})," Overrides"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Cleaning Up Resources"}),": Ensures all resources like listeners or controllers are properly disposed of."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Canceling Network Requests"}),": Useful for stopping any ongoing data fetch operations."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"extending-overrides",children:"Extending Overrides"}),"\n",(0,t.jsx)(i.p,{children:"To override other state functions, simply create a new function with the name of the desired state function you aim to override. This allows for extended customization and control over your widget's lifecycle events."}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.p,{children:"Leveraging these overrides in Circuit not only empowers your app with efficient resource management but also ensures a smooth user experience by optimizing widget performance from initialization to disposal."})]})}function u(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},3977:(e,i,n)=>{n.d(i,{Z:()=>t});const t=n.p+"assets/images/override-811bbb8657c3db63bc801aa4bcce6ef2.gif"},1151:(e,i,n)=>{n.d(i,{Z:()=>c,a:()=>o});var t=n(7294);const s={},r=t.createContext(s);function o(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);