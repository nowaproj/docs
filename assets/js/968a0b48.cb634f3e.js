"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[6197],{4580:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=t(5893),s=t(1151);const r={sidebar_position:8,title:"Loading circular",description:"How to use button widget"},o="Loading Circular",a={id:"ui/widgets/widget_desc/loading_circular",title:"Loading circular",description:"How to use button widget",source:"@site/docs/ui/widgets/widget_desc/loading_circular.md",sourceDirName:"ui/widgets/widget_desc",slug:"/ui/widgets/widget_desc/loading_circular",permalink:"/ui/widgets/widget_desc/loading_circular",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Loading circular",description:"How to use button widget"},sidebar:"tutorialSidebar",previous:{title:"Image",permalink:"/ui/widgets/widget_desc/image"},next:{title:"Checkbox",permalink:"/ui/widgets/widget_desc/checkbox"}},d={},c=[];function l(e){const i={h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"loading-circular",children:"Loading Circular"}),"\n",(0,n.jsx)(i.p,{children:'The "Loading Circular" widget displays a spinning indicator to show that something is loading or processing. Here\'s what each property does:'}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Value:"})," Sets the current progress of the loading process. Leave it null for an indeterminate loader that spins continuously, or set a value between 0.0 and 1.0 for a determinate loader that shows the actual progress."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Background Color:"})," Changes the color behind the circular loading indicator. This is useful for making the loader stand out against different backgrounds."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Color:"})," Sets the color of the loader itself. Choose a color that fits with your app's theme or indicates a specific action (like red for an error)."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Stroke Width:"})," Adjusts the thickness of the loader's line. A larger value makes the loader bolder and more noticeable."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Stroke Align:"})," Determines the alignment of the stroke within the loader's overall space. This can be set to 'inside', 'center', or 'outside', affecting how the loading circle appears within its allocated space."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Semantics Label:"})," Provides a text label for screen readers. This isn't visible on the screen but helps visually impaired users understand what the loader is for."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Semantics Value:"})," Offers a way to provide more detailed information for screen readers, like the actual progress percentage if the loader is determinate."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:'By customizing these properties, you can ensure the "Loading Circular" widget fits well with your app\'s design and provides a clear indication of loading or processing activities to users'})]})}function h(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>o});var n=t(7294);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);