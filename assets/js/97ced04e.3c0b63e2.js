"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[1198],{1184:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"data/displaying_ui","title":"Displaying a response in UI","description":"In the previous sections, we covered how to:","source":"@site/docs/data/displaying_ui.md","sourceDirName":"data","slug":"/data/displaying_ui","permalink":"/data/displaying_ui","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Displaying a response in UI"},"sidebar":"tutorialSidebar","previous":{"title":"Modeling API responses","permalink":"/data/creating_models"},"next":{"title":"Using parameters in requests","permalink":"/data/create-parameters"}}');var t=s(4848),l=s(8453);const d={sidebar_position:3,title:"Displaying a response in UI"},r="Displaying API Response in the UI",c={},a=[{value:"Steps to Display Data in the UI",id:"steps-to-display-data-in-the-ui",level:2},{value:"1. Add a Data Builder Wrapper",id:"1-add-a-data-builder-wrapper",level:3},{value:"2. Configure the Data Builder",id:"2-configure-the-data-builder",level:3},{value:"3. Bind Data to the ListView",id:"3-bind-data-to-the-listview",level:3},{value:"4. Display Data in the Placeholder Widget",id:"4-display-data-in-the-placeholder-widget",level:3},{value:"Understanding the Process",id:"understanding-the-process",level:2},{value:"Tips and Best Practices",id:"tips-and-best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"displaying-api-response-in-the-ui",children:"Displaying API Response in the UI"})}),"\n",(0,t.jsx)(n.p,{children:"In the previous sections, we covered how to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create a collection and an API request."}),"\n",(0,t.jsx)(n.li,{children:"Generate a model from the API response by running a test."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Now, we'll move on to displaying the data retrieved from the API in your app's user interface (UI). In this example, we'll use the ",(0,t.jsx)(n.code,{children:"getAllPosts"})," request to fetch all posts from a specific WordPress blog and display them in the UI."]}),"\n",(0,t.jsx)(n.h2,{id:"steps-to-display-data-in-the-ui",children:"Steps to Display Data in the UI"}),"\n",(0,t.jsxs)(n.p,{children:["To display the API data in your UI, we'll use the ",(0,t.jsx)(n.strong,{children:"Data Builder"})," wrapper in Nowa. This wrapper allows you to inject the results of an API request into your widgets seamlessly."]}),"\n",(0,t.jsx)(n.h3,{id:"1-add-a-data-builder-wrapper",children:"1. Add a Data Builder Wrapper"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"What is a Data Builder?"})}),"\n",(0,t.jsx)(n.p,{children:"The Data Builder wrapper is a tool that:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Injects the results of an API request into the UI."}),"\n",(0,t.jsxs)(n.li,{children:["Provides access to a variable called ",(0,t.jsx)(n.code,{children:"data"})," for all widgets nested under it."]}),"\n",(0,t.jsx)(n.li,{children:"Automatically fires the API request when the screen loads."}),"\n",(0,t.jsx)(n.li,{children:"Displays a loading indicator until the data is received."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How to Add It:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Navigate to the UI Editor:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Open the screen where you want to display the data."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Add the Target Widget:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For this example, we'll display blog titles in a ",(0,t.jsx)(n.code,{children:"ListView"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Drag and drop a ",(0,t.jsx)(n.code,{children:"ListView"})," widget onto your screen."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Wrap with Data Builder:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.code,{children:"ListView"})," widget."]}),"\n",(0,t.jsxs)(n.li,{children:["Click on ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Add Wrapper"})})," in the widget properties panel."]}),"\n",(0,t.jsxs)(n.li,{children:["Choose ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Data Builder"})})," from the list of wrappers."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"ListView"})," is now wrapped with a Data Builder, and widgets under it can access the ",(0,t.jsx)(n.code,{children:"data"})," variable."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(2985).A+"",width:"1200",height:"682"})}),"\n",(0,t.jsx)(n.h3,{id:"2-configure-the-data-builder",children:"2. Configure the Data Builder"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Select the API Request:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"With the Data Builder selected, go to its properties panel."}),"\n",(0,t.jsxs)(n.li,{children:["Under ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Request Type"})}),", choose ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"API Request"})}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"getAllPosts"})})," request from the list."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Understand the ",(0,t.jsx)(n.code,{children:"data"})," Variable:"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"data"})," variable now contains the results of the ",(0,t.jsx)(n.code,{children:"getAllPosts"})," request."]}),"\n",(0,t.jsxs)(n.li,{children:["Its type is ",(0,t.jsx)(n.code,{children:"List<GetAllPostsModel>"}),", which is the model we generated earlier."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," If you didn't generate a model, the ",(0,t.jsx)(n.code,{children:"data"})," variable would be of type ",(0,t.jsx)(n.code,{children:"Response"}),", a generic JSON model. It's recommended to generate a specific model for easier data handling."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-bind-data-to-the-listview",children:"3. Bind Data to the ListView"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Connect the Data to the ListView:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.code,{children:"ListView"})," widget."]}),"\n",(0,t.jsxs)(n.li,{children:["In the properties panel, find the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"List"})})," property."]}),"\n",(0,t.jsxs)(n.li,{children:["Bind the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"List"})})," property to the ",(0,t.jsx)(n.code,{children:"data"})," variable from the Data Builder."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(4113).A+"",width:"1200",height:"682"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Set Up the Placeholder Widget:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"ListView"})," requires a placeholder widget to represent each item in the list."]}),"\n",(0,t.jsxs)(n.li,{children:["For simplicity, we'll use a ",(0,t.jsx)(n.code,{children:"Text"})," widget as the placeholder."]}),"\n",(0,t.jsxs)(n.li,{children:["Add a ",(0,t.jsx)(n.code,{children:"Text"})," widget inside the ",(0,t.jsx)(n.code,{children:"ListView"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-display-data-in-the-placeholder-widget",children:"4. Display Data in the Placeholder Widget"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Access Individual Elements:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"ListView"})," will iterate over the ",(0,t.jsx)(n.code,{children:"data"})," list."]}),"\n",(0,t.jsxs)(n.li,{children:["Each item in the list is accessible via the ",(0,t.jsx)(n.code,{children:"element"})," variable."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"element"})," variable is of type ",(0,t.jsx)(n.code,{children:"GetAllPostsModel"}),", representing a single blog post."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Bind Data to the Text Widget:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Select the ",(0,t.jsx)(n.code,{children:"Text"})," widget (the placeholder)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"text"})})," property of the widget, bind it to ",(0,t.jsx)(n.code,{children:"element.title.rendered"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How to Do This:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Click on the binding icon next to the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Text"})})," property."]}),"\n",(0,t.jsxs)(n.li,{children:["Choose ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"element"})})," from the variables."]}),"\n",(0,t.jsxs)(n.li,{children:["Navigate to ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"title"})})," and then ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"rendered"})}),"."]}),"\n",(0,t.jsx)(n.li,{children:"This path corresponds to how the model is structured."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Preview the Data:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In the UI designer, you might see placeholder text like ",(0,t.jsx)(n.code,{children:"[rendered]"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"This is due to the mock data generated when the model was created."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To see the actual data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Click on ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Play"})})," to run the app in preview mode."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"Data Builder"})," will fetch real data from the API."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"ListView"})," will display the actual blog titles."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:s(6545).A+"",width:"1200",height:"682"})}),"\n",(0,t.jsx)(n.h2,{id:"understanding-the-process",children:"Understanding the Process"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Data Flow:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Builder Wrapper:"})," Fetches data from the API and provides it to child widgets via the ",(0,t.jsx)(n.code,{children:"data"})," variable."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ListView Widget:"})," Uses the ",(0,t.jsx)(n.code,{children:"data"})," list to create multiple instances of the placeholder widget."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Placeholder Widget:"})," Displays individual data items by accessing properties of the ",(0,t.jsx)(n.code,{children:"element"})," variable."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Variable Types:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"data"}),":"]})," A list of ",(0,t.jsx)(n.code,{children:"GetAllPostsModel"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"element"}),":"]})," A single ",(0,t.jsx)(n.code,{children:"GetAllPostsModel"})," instance within the ",(0,t.jsx)(n.code,{children:"data"})," list."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Model Structure:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Each ",(0,t.jsx)(n.code,{children:"GetAllPostsModel"})," contains:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"Title"})," object with a ",(0,t.jsx)(n.code,{children:"rendered"})," string."]}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.code,{children:"Content"})," object with a ",(0,t.jsx)(n.code,{children:"rendered"})," string."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"tips-and-best-practices",children:"Tips and Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Generate Models for API Responses:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always generate a model for your API responses. This makes data binding easier and your code cleaner."}),"\n",(0,t.jsxs)(n.li,{children:["If you see the ",(0,t.jsx)(n.code,{children:"data"})," variable as a ",(0,t.jsx)(n.code,{children:"Response"})," object, go back and generate a model, then reselect the request in the Data Builder to update the ",(0,t.jsx)(n.code,{children:"data"})," variable."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use Mock Data for Design-Time Preview:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Nowa generates mock data automatically when you create a model."}),"\n",(0,t.jsx)(n.li,{children:"This allows you to see sample data in the UI designer without making actual API calls."}),"\n",(0,t.jsx)(n.li,{children:"Mock data helps in designing and testing the UI effectively."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.p,{children:["In the next section, we'll delve deeper into working with ",(0,t.jsx)(n.strong,{children:"Mock Data"}),". We'll learn how to customize mock data and use it to enhance the design and testing phases of your app development."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Proceed to the next section to learn more about using and customizing Mock Data in your app."})})]})}function o(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},2985:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/add_databuilder-843aa4229f6b0d0d2e628484a5bd171e.gif"},4113:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/connecttodata-3ced4a3ddb8e0adf56fa2d08af0f4c50.gif"},6545:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/connect-element-0880bb91bc9e39904c7d8d1bde91c65c.gif"},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>r});var i=s(6540);const t={},l=i.createContext(t);function d(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);