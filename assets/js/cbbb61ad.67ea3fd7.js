"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[6499],{458:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var s=t(5893),i=t(1151);const a={sidebar_position:2,title:"Navigate between screens"},r=void 0,o={id:"circuit/navigate",title:"Navigate between screens",description:"In this section, you will learn:",source:"@site/docs/circuit/navigate.md",sourceDirName:"circuit",slug:"/circuit/navigate",permalink:"/circuit/navigate",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Navigate between screens"},sidebar:"tutorialSidebar",previous:{title:"Intro to Circuit",permalink:"/circuit/circuit_intro"},next:{title:"Overriding state functions",permalink:"/circuit/override_functions"}},c={},h=[{value:"Navigating to Another Screen",id:"navigating-to-another-screen",level:2},{value:"Passing Variables between Screens",id:"passing-variables-between-screens",level:2},{value:"An Example from a news app use case",id:"an-example-from-a-news-app-use-case",level:4}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"In this section, you will learn:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"1. How to navigate between screens\n2. How to add action to a button clicking\n3. How to move data betwen the screens\n"})}),"\n",(0,s.jsxs)(n.p,{children:["One of the fundamental things to do with Circuit in Nowa is to navigate between screens in your app. You can use the ",(0,s.jsx)(n.strong,{children:"navigate"})," node to move to another screen when an event is triggered, such as clicking on a button, and a ",(0,s.jsx)(n.strong,{children:"back"})," node to return to the previous screen."]}),"\n",(0,s.jsx)(n.h2,{id:"navigating-to-another-screen",children:"Navigating to Another Screen"}),"\n",(0,s.jsx)(n.p,{children:"Consider an example where you have an app with two screens and a button on the main screen that takes you to the other screen, and another button to bring you back. To make it work:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Select the button and click on the ",(0,s.jsx)(n.strong,{children:"+"})," button next to the ",(0,s.jsx)(n.strong,{children:"On Pressed"})," field in the details panel to add an action that will be executed when the button is pressed."]}),"\n",(0,s.jsxs)(n.li,{children:["The Circuit board will open with a default ",(0,s.jsx)(n.strong,{children:"On Pressed"})," node, which is the starting point of the logic flow."]}),"\n",(0,s.jsxs)(n.li,{children:["Right-click anywhere on the board, or click on the ",(0,s.jsx)(n.strong,{children:"+"})," button next to the ",(0,s.jsx)(n.strong,{children:"On Pressed"})," node. Head to the ",(0,s.jsx)(n.strong,{children:"Nowa"})," section in the popup and choose ",(0,s.jsx)(n.strong,{children:"Navigate"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.strong,{children:"Navigate"})," node, choose the screen name you want to navigate to (e.g., ",(0,s.jsx)(n.strong,{children:"NewScreen1"}),"). For more information on changing screen names, check out ",(0,s.jsx)(n.a,{href:"/ui/screens/create_screens",children:"Creating Screens"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"When you press the play button and click on the button, the app will navigate to the specified screen."}),"\n",(0,s.jsxs)(n.li,{children:["To add a back functionality to the button in the second screen, follow the same process but choose the ",(0,s.jsx)(n.strong,{children:"Back"})," node instead of the ",(0,s.jsx)(n.strong,{children:"Navigate"})," node."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(8045).Z+"",width:"2864",height:"1682"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"passing-variables-between-screens",children:"Passing Variables between Screens"}),"\n",(0,s.jsxs)(n.p,{children:["If you have public variables for the screen you want to navigate to, input pins for each variable will be shown when selecting the screen name in the ",(0,s.jsx)(n.strong,{children:"Navigate"})," node. You can pass the initial value for those variables from the current screen by:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Connecting the variables of the current screen to those pins."}),"\n",(0,s.jsx)(n.li,{children:"Typing the values directly if they are numbers or strings."}),"\n",(0,s.jsx)(n.li,{children:"Creating a new instance of an object if the type is a custom object."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can also leave the input pins empty, and the values of the variables will be their default values set during creation. For more information, check out ",(0,s.jsx)(n.a,{href:"/variables/local_variables/var_vs_param",children:"Creating Local Variables"})]}),"\n",(0,s.jsx)(n.h4,{id:"an-example-from-a-news-app-use-case",children:"An Example from a news app use case"}),"\n",(0,s.jsx)(n.p,{children:"In this example, we have a news app with two screens: the first screen displays a list of news cards, and the second screen shows the details of the news item that the user clicks on."}),"\n",(0,s.jsxs)(n.p,{children:["To achieve this, we add an ",(0,s.jsx)(n.strong,{children:"On Pressed"})," event to the card placeholder by wrapping it with the ",(0,s.jsx)(n.strong,{children:"Gesture Detector"})," wrapper. The variables visible in the Circuit board under the ",(0,s.jsx)(n.strong,{children:"Locals"})," section are all the variables accessible to that specific widget. In this case, the card placeholder receives an object called ",(0,s.jsx)(n.strong,{children:"element"})," from the ",(0,s.jsx)(n.strong,{children:"Group (row)"})," it belongs to for one particular news item to display. This element object contains the variables ",(0,s.jsx)(n.code,{children:"title"}),", ",(0,s.jsx)(n.code,{children:"date"}),", ",(0,s.jsx)(n.code,{children:"content"}),", and ",(0,s.jsx)(n.code,{children:"image"})," for that card. By passing these variables to the second screen, the user can view the details of the news item they clicked on."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(9186).Z+"",width:"1811",height:"908"})}),"\n",(0,s.jsxs)(n.p,{children:["For more information on how the data was loaded from an API, check out the ",(0,s.jsx)(n.a,{href:"../data",children:"API section"}),". To see how the data was connected to a row, refer to ",(0,s.jsx)(n.a,{href:"/variables/lists",children:"Creating and displaying Lists"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},9186:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/moving_data_with_navigate-d483ec012fcf944e0ed67c03b730c8d7.png"},8045:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/navigate-b9dab313950e7b7c21e5d272001ee43f.gif"},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var s=t(7294);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);