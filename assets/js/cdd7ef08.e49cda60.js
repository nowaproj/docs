"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[1680],{7223:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>a,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"ui/widgets/widget-desc/listtile","title":"List Tile","description":"The List Tile widget is a versatile component used in Flutter to display a row in a list or other structures. It\'s designed to present multiple pieces of information in a well-organized manner. Here\u2019s a breakdown of its properties:","source":"@site/docs/ui/widgets/widget-desc/listtile.md","sourceDirName":"ui/widgets/widget-desc","slug":"/ui/widgets/widget-desc/listtile","permalink":"/ui/widgets/widget-desc/listtile","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Linear Progress Indicator","permalink":"/ui/widgets/widget-desc/linear-progress-indicator"},"next":{"title":"Lottie","permalink":"/ui/widgets/widget-desc/lottie"}}');var s=n(4848),l=n(8453);const r={},o="List Tile",d={},c=[{value:"Properties:",id:"properties",level:4}];function h(e){const i={h1:"h1",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"list-tile",children:"List Tile"})}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.strong,{children:"List Tile"})," widget is a versatile component used in Flutter to display a row in a list or other structures. It's designed to present multiple pieces of information in a well-organized manner. Here\u2019s a breakdown of its properties:"]}),"\n",(0,s.jsx)(i.h4,{id:"properties",children:"Properties:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Leading:"})," Widget placed at the beginning of the List Tile. Commonly used for icons or images that represent the list item."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Title:"})," The primary content of the List Tile. Typically a text widget that displays the main piece of information."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Subtitle:"})," Additional content displayed below the title. Provides further details or secondary information."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Trailing:"})," Widget placed at the end of the List Tile. Often used for action icons or additional information."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"isThreeLine:"})," If set to true, the subtitle will be displayed as two lines, and the List Tile will be taller to accommodate three lines in total."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Dense:"})," Makes the list tile more compact, reducing the height and the font sizes."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Shape:"})," Defines the shape of the List Tile. Used to apply a border or a rounded rectangle shape to the tile."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Selected Color:"})," The color displayed when the List Tile is selected."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Icon Color:"})," The color of the icons within the List Tile, typically applied to the leading and trailing icons."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Text Color:"})," Sets the color of the text inside the List Tile, usually applied to the title and subtitle."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Title TextStyle:"})," Custom text style for the title."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Subtitle TextStyle:"})," Custom text style for the subtitle."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Leading and Trailing TextStyle:"})," Defines the text style for the text within the leading and trailing widgets."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Content Padding:"})," The padding around the List Tile's content."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Enabled:"})," If false, disables the tile and prevents it from reacting to touch."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"OnTap/OnLongPress/OnFocusChange:"})," Set different user interactions with circuit."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Selected:"})," If true, the List Tile appears selected, changing its color to the selected color."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Focus Color:"})," The color of the List Tile when it has keyboard focus."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Hover Color:"})," The color of the List Tile when a pointer is hovering over it."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Splash Color:"})," The color of the ink splash introduced by tapping the List Tile."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Autofocus:"})," If true, the List Tile will be focused automatically when initiated."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Tile Color:"})," The background color of the List Tile."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Selected Tile Color:"})," The background color of the List Tile when it is selected."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Enable Feedback:"})," Whether the List Tile should provide feedback on interaction (like a ripple effect)."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Horizontal Title Gap:"})," The horizontal gap between the titles and the leading/trailing widgets."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Min Vertical Padding:"})," The minimum vertical padding between the contents of the List Tile."]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Min Leading Width:"})," The minimum width of the leading widget, ensuring it has adequate space."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"By configuring these properties, developers can create a List Tile that fits perfectly within the visual and functional requirements of their app, making lists not only more informative but also more interactive."})]})}function a(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var t=n(6540);const s={},l=t.createContext(s);function r(e){const i=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);