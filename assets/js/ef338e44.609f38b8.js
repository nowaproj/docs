"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[5365],{1820:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"logic/common_functionalities/open_url","title":"Open Url","description":"How to open URLs from your app","source":"@site/docs/logic/common_functionalities/open_url.md","sourceDirName":"logic/common_functionalities","slug":"/logic/common_functionalities/open_url","permalink":"/logic/common_functionalities/open_url","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Open Url","description":"How to open URLs from your app"},"sidebar":"tutorialSidebar","previous":{"title":"Print","permalink":"/logic/common_functionalities/print"},"next":{"title":"Platform check","permalink":"/logic/common_functionalities/platform_checking"}}');var s=i(4848),o=i(8453);const r={sidebar_position:3,title:"Open Url",description:"How to open URLs from your app"},l="Open Url",a={},d=[{value:"Want to open a website <em>inside</em> your app instead?",id:"want-to-open-a-website-inside-your-app-instead",level:2},{value:"How to use the OpenUrl node",id:"how-to-use-the-openurl-node",level:2},{value:"Dynamic URLs",id:"dynamic-urls",level:3},{value:"What happens when it&#39;s triggered?",id:"what-happens-when-its-triggered",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"open-url",children:"Open Url"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"OpenUrl"})," node is used to open a website or external link directly in the user's browser. This action will cause the user to temporarily leave your app, as the link opens outside the app environment."]}),"\n",(0,s.jsx)(n.p,{children:"This is useful when you want to redirect users to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A support page"}),"\n",(0,s.jsx)(n.li,{children:"An external blog or documentation"}),"\n",(0,s.jsx)(n.li,{children:"A payment or checkout link"}),"\n",(0,s.jsx)(n.li,{children:"Any external resource on the web"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"want-to-open-a-website-inside-your-app-instead",children:["Want to open a website ",(0,s.jsx)(n.em,{children:"inside"})," your app instead?"]}),"\n",(0,s.jsxs)(n.p,{children:["If you want users to stay inside your app and view the website without switching to a browser, use the ",(0,s.jsx)(n.strong,{children:"WebView widget"})," instead. This embeds the webpage within your app screen."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use-the-openurl-node",children:"How to use the OpenUrl node"}),"\n",(0,s.jsx)(n.p,{children:"Here\u2019s how to set it up step by step:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Open the function or event"})," where you want to add the OpenUrl logic (for example, a button press or a page load event)."]}),"\n",(0,s.jsxs)(n.li,{children:["Under the ",(0,s.jsx)(n.strong,{children:"Nowa"})," category in the logic panel, drag and drop the ",(0,s.jsx)(n.strong,{children:"OpenUrl"})," node."]}),"\n",(0,s.jsxs)(n.li,{children:["Select the node, and on the right panel, you\u2019ll see a field labeled ",(0,s.jsx)(n.strong,{children:"Url"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Enter the full website link you want to open (e.g., ",(0,s.jsx)(n.code,{children:"https://example.com"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:i(4920).A+"",width:"1594",height:"1171"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"dynamic-urls",children:"Dynamic URLs"}),"\n",(0,s.jsxs)(n.p,{children:["Just like any other field in Nowa, you can make the ",(0,s.jsx)(n.strong,{children:"Url"})," field dynamic:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Click on the ",(0,s.jsx)(n.code,{children:"Url"})," field"]}),"\n",(0,s.jsxs)(n.li,{children:["Use the ",(0,s.jsx)(n.strong,{children:"Linking menu"})," to connect it to a variable, function output, parameter, or expression"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This is especially useful if:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The URL depends on user data"}),"\n",(0,s.jsx)(n.li,{children:"You want to open different links based on conditions"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"what-happens-when-its-triggered",children:"What happens when it's triggered?"}),"\n",(0,s.jsx)(n.p,{children:"Once the function is called or the event is triggered:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The app will pause in the background"}),"\n",(0,s.jsx)(n.li,{children:"The user's default browser will open with the URL you provided"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This is the standard behavior for external links on mobile and web platforms."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Use this node when you want to connect your app to the wider web, while keeping the user's experience simple and clear."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},4920:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/openurl-13590a117066db7f9a9b980f02892fae.png"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);