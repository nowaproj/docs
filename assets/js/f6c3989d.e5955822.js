"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[1589],{5379:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"logic/control-flow/try-catch","title":"Try Node","description":"How to use Try node to handle exceptions","source":"@site/docs/logic/control-flow/try-catch.mdx","sourceDirName":"logic/control-flow","slug":"/logic/control-flow/try-catch","permalink":"/logic/control-flow/try-catch","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Try Node","description":"How to use Try node to handle exceptions"},"sidebar":"tutorialSidebar","previous":{"title":"If Statements","permalink":"/logic/control-flow/if-statement"},"next":{"title":"Common functionalities","permalink":"/category/common-functionalities"}}');var i=r(4848),t=r(8453);const s={sidebar_position:2,title:"Try Node",description:"How to use Try node to handle exceptions"},l="Try Node",h={},a=[{value:"\ud83e\uddef What is an Exception?",id:"-what-is-an-exception",level:3},{value:"\u26a1 Common Situations to Use a Try Node",id:"-common-situations-to-use-a-try-node",level:3},{value:"\ud83d\udd27 What the Try Node Includes",id:"-what-the-try-node-includes",level:3},{value:"1. The Try Node Itself",id:"1-the-try-node-itself",level:4},{value:"2. The Main Branch",id:"2-the-main-branch",level:4},{value:"3. The On Error Branch",id:"3-the-on-error-branch",level:4},{value:"\u2795 How to Add a Try Node",id:"-how-to-add-a-try-node",level:3},{value:"\u2705 Example: Calling an API with Error Handling",id:"-example-calling-an-api-with-error-handling",level:3},{value:"\ud83d\udca1 Things You Can Add to the On Error Branch",id:"-things-you-can-add-to-the-on-error-branch",level:3}];function c(e){const n={br:"br",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"try-node",children:"Try Node"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Try node"})," in Nowa is a special compound node used to handle situations where something might go wrong during execution. It\u2019s useful for actions that may fail\u2014like calling an API or accessing local data\u2014so your app doesn't crash and can show helpful feedback instead."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-what-is-an-exception",children:"\ud83e\uddef What is an Exception?"}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.strong,{children:"exception"})," is a problem that happens while your app is running. For example, if your app tries to connect to the internet but there's no connection, it might throw an exception. Without handling it, the app could crash or behave unexpectedly."]}),"\n",(0,i.jsxs)(n.p,{children:["Using the ",(0,i.jsx)(n.strong,{children:"Try node"}),", you\u2019re telling your app:",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.em,{children:'"Try to run this, and if something goes wrong, do this instead."'})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-common-situations-to-use-a-try-node",children:"\u26a1 Common Situations to Use a Try Node"}),"\n",(0,i.jsx)(n.p,{children:"You can use a Try node in many real-life scenarios. Here are three common ones:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"API requests"}),": For example, calling a weather API. If there\u2019s no internet connection, the request might fail."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reading or writing to local storage"}),": If the app tries to load saved data but it's not there or not accessible."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Running custom Dart code"}),": Sometimes custom logic or calculations can fail, especially if they depend on user input or external services."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-what-the-try-node-includes",children:"\ud83d\udd27 What the Try Node Includes"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:r(8687).A+"",width:"1590",height:"1194"})}),"\n",(0,i.jsx)(n.p,{children:"The Try node is made of three parts:"}),"\n",(0,i.jsx)(n.h4,{id:"1-the-try-node-itself",children:"1. The Try Node Itself"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When you select the Try node, you\u2019ll see an ",(0,i.jsx)(n.strong,{children:"\u201cError Name\u201d"})," field in the details panel on the right."]}),"\n",(0,i.jsx)(n.li,{children:"This is where you define the name of the variable that will store the error message if something goes wrong."}),"\n",(0,i.jsx)(n.li,{children:"You can then use this variable to show the error to the user or take action based on it."}),"\n",(0,i.jsxs)(n.li,{children:["Example: set the error name to ",(0,i.jsx)(n.code,{children:"error"}),", and you\u2019ll find it in the ",(0,i.jsx)(n.strong,{children:"Locals"}),' section. You can then use it when you add a node to the "On Error" branch to display it to the user']}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"2-the-main-branch",children:"2. The Main Branch"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"This is the main line inside the Try node."}),"\n",(0,i.jsx)(n.li,{children:"It\u2019s where you place the main actions you want to run."}),"\n",(0,i.jsx)(n.li,{children:"If everything works fine, the app continues with this branch."}),"\n",(0,i.jsxs)(n.li,{children:["But if ",(0,i.jsx)(n.strong,{children:"any node inside it fails"}),", the flow automatically switches to the \u201cOn Error\u201d branch."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"3-the-on-error-branch",children:"3. The On Error Branch"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This lower branch runs ",(0,i.jsx)(n.strong,{children:"only if something fails in the main branch"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"You can use the error variable here to display a message or perform a backup action."}),"\n",(0,i.jsx)(n.li,{children:"It\u2019s the place to handle problems in a smooth way."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-how-to-add-a-try-node",children:"\u2795 How to Add a Try Node"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Hover over the point in the Circuit where you want to add the Try node."}),"\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:"+"})," button that appears."]}),"\n",(0,i.jsxs)(n.li,{children:["Choose the ",(0,i.jsx)(n.strong,{children:"Try"})," node from the list."]}),"\n",(0,i.jsxs)(n.li,{children:["You\u2019ll now see two branches inside it:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["One for the ",(0,i.jsx)(n.strong,{children:"main actions"})]}),"\n",(0,i.jsxs)(n.li,{children:["One for what happens ",(0,i.jsx)(n.strong,{children:"if there\u2019s an error"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Add your main nodes (like an API request) to the main branch or line (on the right)."}),"\n",(0,i.jsx)(n.li,{children:'Add backup actions (like showing an error message) to the "On Error" branch (on the left)'}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-example-calling-an-api-with-error-handling",children:"\u2705 Example: Calling an API with Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"Let\u2019s say you\u2019re making an API call and want to show a message if it fails."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Add a ",(0,i.jsx)(n.strong,{children:"Try node"})," and name the error variable ",(0,i.jsx)(n.code,{children:"error"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["In the ",(0,i.jsx)(n.strong,{children:"main branch"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add an ",(0,i.jsx)(n.strong,{children:"API request"})," node."]}),"\n",(0,i.jsxs)(n.li,{children:["Store the response in a variable like ",(0,i.jsx)(n.code,{children:"var"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["In the ",(0,i.jsx)(n.strong,{children:"On Error branch"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add a ",(0,i.jsx)(n.strong,{children:"Snackbar"})," node from the ",(0,i.jsx)(n.strong,{children:"Globals"})," category."]}),"\n",(0,i.jsxs)(n.li,{children:["Set its text to show the ",(0,i.jsx)(n.code,{children:"error"})," variable using the expression editor.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["You\u2019ll find ",(0,i.jsx)(n.code,{children:"error"})," under ",(0,i.jsx)(n.strong,{children:"Locals"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'Now, if the API request fails, the app will display the error message in a Snackbar, like "No internet connection."'}),"\n",(0,i.jsxs)("video",{controls:!0,width:"720",children:[(0,i.jsx)("source",{src:"/img/circuit/control_flow/try/adding_try.mp4",type:"video/mp4"}),(0,i.jsx)(n.p,{children:"Your browser does not support the video tag."})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"-things-you-can-add-to-the-on-error-branch",children:"\ud83d\udca1 Things You Can Add to the On Error Branch"}),"\n",(0,i.jsx)(n.p,{children:"In the On Error branch, you can add:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Snackbar"})," to show a quick message (from ",(0,i.jsx)(n.code,{children:"Globals"})," category)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bottom Sheet"})," or ",(0,i.jsx)(n.strong,{children:"Dialog"})," (from the ",(0,i.jsx)(n.code,{children:"Nowa"})," category)"]}),"\n",(0,i.jsx)(n.li,{children:"Actions to reset variables or redirect the user"}),"\n",(0,i.jsx)(n.li,{children:"Logs for debugging"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can search for these when adding new nodes inside the On Error branch."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["Using the ",(0,i.jsx)(n.strong,{children:"Try node"})," helps your app respond gracefully when things go wrong. It gives you full control over how your app behaves in real-world scenarios\u2014so users always get a smooth and professional experience."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var o=r(6540);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}},8687:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/try-catch-8397deb7f0df4de9e6e71e78459c8c22.png"}}]);