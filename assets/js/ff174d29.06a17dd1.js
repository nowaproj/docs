"use strict";(self.webpackChunknowa_docs=self.webpackChunknowa_docs||[]).push([[1416],{8364:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>o,frontMatter:()=>a,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"templates/chat-template","title":"Chat template","description":"Learn how to use the chat template","source":"@site/docs/templates/chat-template.mdx","sourceDirName":"templates","slug":"/templates/chat-template","permalink":"/templates/chat-template","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Chat template","description":"Learn how to use the chat template"},"sidebar":"tutorialSidebar","previous":{"title":"Templates","permalink":"/category/templates"},"next":{"title":"Keyboard shortcuts","permalink":"/shortcuts"}}');var i=s(4848),l=s(8453);const a={sidebar_position:1,title:"Chat template",description:"Learn how to use the chat template"},r="Chat Template",d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Adding the Chat Template",id:"adding-the-chat-template",level:2},{value:"Testing the Chat Template",id:"testing-the-chat-template",level:2},{value:"What\u2019s Inside the Chat Template?",id:"whats-inside-the-chat-template",level:2},{value:"Breakdown of Each Component",id:"breakdown-of-each-component",level:2},{value:"<strong>message_model.dart</strong>",id:"message_modeldart",level:3},{value:"<strong>chat_bubble.dart</strong>",id:"chat_bubbledart",level:3},{value:"<strong>chat_page.dart</strong>",id:"chat_pagedart",level:3},{value:"Customizing the Chat Template",id:"customizing-the-chat-template",level:2},{value:"<strong>Sending Messages via API or Firebase</strong>",id:"sending-messages-via-api-or-firebase",level:3},{value:"<strong>Receiving Messages</strong>",id:"receiving-messages",level:3}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"chat-template",children:"Chat Template"})}),"\n",(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["The Chat Template provides a ",(0,i.jsx)(t.strong,{children:"ready-to-use chat interface"}),", saving you time in building chat functionality from scratch. With this template, you get a ",(0,i.jsx)(t.strong,{children:"fully functional chat screen"})," that supports message sending and display, structured message bubbles, and easy customization. Whether you're building a ",(0,i.jsx)(t.strong,{children:"real-time chat app"})," or adding a messaging feature, this template gives you a solid starting point with well-structured components that can be integrated with APIs, Firebase, or any backend service."]}),"\n",(0,i.jsx)(t.h2,{id:"adding-the-chat-template",children:"Adding the Chat Template"}),"\n",(0,i.jsx)(t.p,{children:"To drop the chat template into your project:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Click on the ",(0,i.jsx)(t.strong,{children:"Screens"})," icon."]}),"\n",(0,i.jsxs)(t.li,{children:["Select ",(0,i.jsx)(t.strong,{children:"Chat Template"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"You will see a list of files that will be added (explained later)."}),"\n",(0,i.jsxs)(t.li,{children:["Click ",(0,i.jsx)(t.strong,{children:"Import"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["In the ",(0,i.jsx)(t.strong,{children:"Files Panel"}),", a new folder named ",(0,i.jsx)(t.code,{children:"chat_template"})," will appear, containing the three chat-related files."]}),"\n",(0,i.jsxs)(t.li,{children:["Drag and drop ",(0,i.jsx)(t.code,{children:"chat_page.dart"})," (the screen) and ",(0,i.jsx)(t.code,{children:"chat_bubble.dart"})," (the message bubble) onto the board."]}),"\n",(0,i.jsxs)(t.li,{children:["Set the ",(0,i.jsx)(t.strong,{children:"height"})," of ",(0,i.jsx)(t.code,{children:"chat_bubble.dart"})," to ",(0,i.jsx)(t.strong,{children:"auto"})," so that it dynamically adjusts to the message size."]}),"\n"]}),"\n",(0,i.jsxs)("video",{controls:!0,width:"850",children:[(0,i.jsx)("source",{src:"/videos/templates/chat/dropping-chat-template.mp4",type:"video/mp4"}),(0,i.jsx)(t.p,{children:"Your browser does not support the video tag."})]}),"\n",(0,i.jsx)(t.h2,{id:"testing-the-chat-template",children:"Testing the Chat Template"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Select the ",(0,i.jsx)(t.code,{children:"chat_page.dart"})," screen and click ",(0,i.jsx)(t.strong,{children:"Play"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Type a message and press send."}),"\n",(0,i.jsx)(t.li,{children:"The message will be added to the chat list and displayed."}),"\n"]}),"\n",(0,i.jsxs)("video",{controls:!0,width:"850",children:[(0,i.jsx)("source",{src:"/videos/templates/chat/running-template.mp4",type:"video/mp4"}),(0,i.jsx)(t.p,{children:"Your browser does not support the video tag."})]}),"\n",(0,i.jsx)(t.h2,{id:"whats-inside-the-chat-template",children:"What\u2019s Inside the Chat Template?"}),"\n",(0,i.jsx)(t.p,{children:"The chat template allows you to quickly implement a full chat interface. It consists of:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"chat_bubble.dart"}),": Defines the chat bubble component."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"chat_page.dart"}),": The main chat screen containing a ",(0,i.jsx)(t.code,{children:"ListView"})," to display chat bubbles."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"message_model.dart"}),": A data model representing a single chat message."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"breakdown-of-each-component",children:"Breakdown of Each Component"}),"\n",(0,i.jsx)(t.h3,{id:"message_modeldart",children:(0,i.jsx)(t.strong,{children:"message_model.dart"})}),"\n",(0,i.jsxs)(t.p,{children:["Defines a ",(0,i.jsx)(t.strong,{children:"custom type (object)"})," with three fields:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"msg"}),": The message text (String)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"time"}),": The timestamp (String)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"isMe"}),": A ",(0,i.jsx)(t.strong,{children:"boolean"})," indicating whether the message was sent (",(0,i.jsx)(t.code,{children:"true"}),") or received (",(0,i.jsx)(t.code,{children:"false"}),")."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"chat_bubbledart",children:(0,i.jsx)(t.strong,{children:"chat_bubble.dart"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Contains a parameter ",(0,i.jsx)(t.code,{children:"message"})," of type ",(0,i.jsx)(t.code,{children:"message_model"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Uses the fields from ",(0,i.jsx)(t.code,{children:"message_model"})," (",(0,i.jsx)(t.code,{children:"msg"})," and ",(0,i.jsx)(t.code,{children:"time"}),") to populate the ",(0,i.jsx)(t.code,{children:"Text"})," widgets inside the chat bubble."]}),"\n",(0,i.jsxs)(t.li,{children:["Uses ",(0,i.jsx)(t.code,{children:"isMe"})," to determine the bubble\u2019s ",(0,i.jsx)(t.strong,{children:"background color"}),", differentiating between sent and received messages."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"chat_pagedart",children:(0,i.jsx)(t.strong,{children:"chat_page.dart"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"FullChat"}),": A ",(0,i.jsx)(t.code,{children:"List<message_model>"})," that holds the chat history. Adding a message to this list updates the chat view."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"TextController"})," (",(0,i.jsx)(t.code,{children:"text"})," variable): Controls the ",(0,i.jsx)(t.strong,{children:"TextField"})," where users type messages. Extracts the message text and clears it after sending."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"send() function"}),":","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Adds a new ",(0,i.jsx)(t.code,{children:"message_model"})," object to ",(0,i.jsx)(t.code,{children:"FullChat"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"Clears the text field."}),"\n",(0,i.jsx)(t.li,{children:"Refreshes the screen to display the new message."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Send Button"}),":","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Calls ",(0,i.jsx)(t.code,{children:"send()"})," when pressed, adding the new message to the chat."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"customizing-the-chat-template",children:"Customizing the Chat Template"}),"\n",(0,i.jsx)(t.h3,{id:"sending-messages-via-api-or-firebase",children:(0,i.jsx)(t.strong,{children:"Sending Messages via API or Firebase"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Modify the ",(0,i.jsx)(t.strong,{children:"Send function"})," inside the screen to send messages through a network request (e.g., API, Firebase)."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"receiving-messages",children:(0,i.jsx)(t.strong,{children:"Receiving Messages"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["When a message is received from an API:","\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Add the message to ",(0,i.jsx)(t.code,{children:"FullChat"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Create a new ",(0,i.jsx)(t.code,{children:"message_model"})," object and set:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"msg"}),": The received message text."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"time"}),": The message timestamp."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"isMe"}),": ",(0,i.jsx)(t.code,{children:"false"})," (indicating a received message)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Call ",(0,i.jsx)(t.strong,{children:"refresh()"})," to update the UI."]}),"\n",(0,i.jsx)(t.li,{children:"The message will appear in a different color, distinguishing it from sent messages."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This chat template provides a solid foundation for implementing real-time chat functionality while allowing flexibility for custom integration."})]})}function o(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>r});var n=s(6540);const i={},l=n.createContext(i);function a(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(l.Provider,{value:t},e.children)}}}]);